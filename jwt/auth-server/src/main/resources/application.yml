spring:
  profiles:
    active: local

server:
  port: 8081

logging:
  level:
    org.springframework.web.servlet: DEBUG
    org.springframework.web.client.RestTemplate: TRACE
    org.springframework.web: DEBUG
    org.springframework.jdbc.datasource: DEBUG
    org.hibernate.type: trace
    org.springframework.boot.autoconfigure.security.oauth2.resource.UserInfoTokenServices: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.jdbc.core: TRACE
    org.springframework.jdbc:core.JdbcTemplate: DEBUG

security:
  saltkey: madeinjoohyung #config로 관리하지 말고 안전하게 암호화 or in memory 등으로 관리하자.


---
spring:
  profiles: local
  datasource:
    url: jdbc:mysql://localhost/oauth?zeroDateTimeBehavior=convertToNull&useSSL=false&useUnicode=true&characterEncoding=utf8
    username: root
    password:
    driverClassName: com.mysql.cj.jdbc.Driver
    #platform: init
    #initialization-mode: always
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
  jackson:
    serialization:
      INDENT_OUTPUT: true
---
spring:
  profiles: docker
  datasource:
    url: jdbc:mysql://DB_HOST/oauth?zeroDateTimeBehavior=convertToNull&useSSL=false&useUnicode=true&characterEncoding=utf8
    username: root
    password:
    driverClassName: com.mysql.cj.jdbc.Driver
    #platform: init
    #initialization-mode: always
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
  jackson:
    serialization:
      INDENT_OUTPUT: true
