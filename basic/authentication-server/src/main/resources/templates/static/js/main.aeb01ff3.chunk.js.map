{"version":3,"sources":["logo.svg","pages/login.js","component/informations.js","pages/approval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","Grid","container","item","xs","Box","mt","root","typography","button","background","padding","title","marginLeft","PaymentForm","Fragment","layout","marginRight","breakpoints","up","marginBottom","stepper","buttons","justifyContent","Checkout","React","useState","approvalState","formsubmit","isApproval","rootForm","document","querySelector","user_oauth_approval","value","action","method","Paper","onClick","e","App","path","Login","Approval","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aeb01ff3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n/**\n * https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/sign-in/SignIn.js\n */\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <div className={classes.form}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Email Address\"\n            name=\"username\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          {\n            /*\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n             */\n          }\n          \n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n  },\n  title: {\n    marginLeft: theme.spacing(3),\n    marginTop: theme.spacing(1)\n  }\n}));\n\nexport default function PaymentForm() {\n    const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n            <div className={classes.root}>\n                <Typography variant=\"h6\" className={classes.title} >정보 제공 동의</Typography>\n                <ul>\n                    <li>email</li>\n                    <li>id</li>\n                    <li>...</li>\n                </ul>\n            </div>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Informations from '../component/informations';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\n\n\n\nexport default function Checkout() {\n  const classes = useStyles();\n  const [approvalState, setApprovalState] = React.useState(false);\n\n  const formsubmit = (isApproval) => {\n    \n\n    const rootForm = document.querySelector('#root');\n\n    //외부 서버렌더링 + nonblock 조합이라 불가피하게 직접 dom 접근\n    //setApprovalState(isApproval);\n    rootForm.user_oauth_approval.value = isApproval;\n    rootForm.action = '/oauth/authorize';\n    rootForm.method = 'post';\n    rootForm.submit();\n  };\n\n  return (\n    <React.Fragment>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Checkout\n          </Typography>\n          <Informations />\n          <input type='hidden' name='user_oauth_approval' value={approvalState} />\n          <div className={classes.buttons}>\n            <Button onClick={(e)=>{\n              formsubmit(false)\n            }} className={classes.button}>\n                거부\n            </Button>\n            <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e)=>{\n              formsubmit(true)\n            }}\n            className={classes.button}\n            >\n            확인\n            </Button>\n          </div>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './pages/login';\nimport Approval from './pages/approval';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/oauth/confirm_access\" component={Approval} />\n        <Route path=\"/oauth/authorize\" component={Approval} />\n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}